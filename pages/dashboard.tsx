import React, { useEffect, useState } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import PageSpinner from '@components/Utility/PageSpinner';
import { signOut, useSession } from 'next-auth/react';
import { Button, Center, Text } from '@mantine/core';
import { CheckIcon, DoubleArrowRightIcon } from '@radix-ui/react-icons';
import { useNotifications } from '@mantine/notifications';

const Dashboard: NextPage = () => {
  const router = useRouter();
  const { data: session, status } = useSession();
  const [loading, setLoading] = useState(true);
  const notifications = useNotifications();

  /** Authentication Check */
  useEffect(() => {
    if (status !== 'loading' && session) {
      setLoading(false);
    }
    if (status == 'unauthenticated' && !session) {
      router.push('/');
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [session, status]);

  /** Spinner While Authentication Check */
  if (loading) return <PageSpinner />;

  /** Signout Handler */
  const signOutHandler = async () => {
    /** Find URL Based On Environment */
    const URI =
      process.env.NEXT_PUBLIC_VERCEL_ENV == 'production' ? `${process.env.NEXTAUTH_URL}/` : 'http://localhost:3000/';

    /** Signout And Redirect User */
    await signOut({ redirect: true, callbackUrl: URI });

    return notifications.showNotification({
      title: (
        <Text size='md' weight={500}>
          Logout Successful.
        </Text>
      ),
      message: null,
      icon: <CheckIcon />,
      color: 'teal',
    });
  };

  return (
    <div className='main_wrapper'>
      <Head>
        <title>Dashboard</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/web_icon.svg' />
      </Head>

      <div className='container_wrapper'>
        <Center style={{ width: '100%', height: '100vh' }}>
          <div style={{ display: 'flex', flexDirection: 'column' }}>
            <Text size='xl'>{session?.user?.name}! You Are Authenticated...</Text>
            <Center>
              <Button
                styles={(theme) => ({
                  root: {
                    color: 'white',

                    '&:hover': {
                      backgroundColor: 'transparent',
                    },
                  },
                })}
                mt='1rem'
                rightIcon={<DoubleArrowRightIcon />}
                variant='subtle'
                onClick={signOutHandler}>
                <Text weight={300}>Logout Now</Text>
              </Button>
            </Center>
          </div>
        </Center>
      </div>
    </div>
  );
};

export default Dashboard;
